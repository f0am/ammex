type User
  @model
  @versioned
  @key(name: "byEmployeeNumber", fields: ["employeeNumber"]) {
  id: ID!
  employeeNumber: Int!
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  role: UserRole!
  status: UserStatus @default(value: "PENDING")
  jobs: [Job] @connection(keyName: "byAssignee", fields: ["id"])
  comments: [Comment] @connection(keyName: "byAuthor", fields: ["id"])
}

enum UserRole {
  EMPLOYEE
  MANAGER
  ADMIN
}

enum UserStatus {
  PENDING
  ACTIVE
  DISABLED
}

type Client
  @model
  @versioned
  @key(name: "byClientNumber", fields: ["clientNumber"]) {
  id: ID!
  clientNumber: Int!
  name: String!
  contact: String!
  phone: String!
  address: String!
  email: String!
  owners: [String]
  status: ClientStatus @default(value: "PENDING")
  # jobs: [Job] @connection(keyName: "byClient", fields: ["id"])
  contracts: [Contract] @connection(keyName: "byClient", fields: ["id"])
}

enum ClientStatus {
  PENDING
  ACTIVE
  DISABLED
}

enum ContractType {
  PAYROLL
  BOOKKEEPING
  TAXES
}

# type Payroll @model @versioned @key(name: "byContract", fields: ["clientID"]) {
#   id: ID!
#   type: ContractType @default(value: "PAYROLL")
#   clientID: ID!
#   client: Client @connection(fields: ["clientID"])
#   startDate: String
#   endDate: String
#   payrollNumber: String
#   payrollFrequency: String
#   remittancePeriod: String
#   remittancePeriodQc: String
#   cheques: Int
#   wsib: String
#   wsibRemittance: String
#   wsibRate: String
#   wsibCode: String
#   t4deadline: String
# }

# type Taxes @model @versioned @key(name: "byContract", fields: ["clientID"]) {
#   id: ID!
#   type: ContractType! @default(value: "TAXES")
#   clientID: ID!
#   client: Client @connection(fields: ["clientID"])
#   startDate: String
#   endDate: String
#   corporation: Boolean
#   corporationYearEndDate: String
# }

# type Bookkeeping
#   @model
#   @versioned
#   @key(name: "byContract", fields: ["clientID"]) {
#   id: ID!
#   type: ContractType! @default(value: "BOOKKEEPING")
#   clientID: ID!
#   client: Client @connection(fields: ["clientID"])
#   startDate: String
#   endDate: String
#   gst: String
#   qst: String
#   period: String
#   corporation: Boolean
#   corporationYearEndDate: String
# }

type Contract @model @versioned {
  # @key(name: "byClient", fields: ["clientID"])
  id: ID!
  type: ContractType!
  clientID: ID!
  client: Client @connection(fields: ["clientID"])
  startDate: AWSDateTime
  endDate: AWSDateTime
  gst: String
  qst: String
  period: String
  corporation: Boolean
  corporationYearEndDate: String
  payrollNumber: String
  payrollFrequency: String
  remittancePeriod: String
  remittancePeriodQc: String
  cheques: Int
  wsib: String
  wsibRemittance: String
  wsibRate: String
  wsibCode: String
  t4DueDate: AWSDateTime
  jobs: [Job] @connection(keyName: "byContract", fields: ["id"])
}

type Job
  @model
  @versioned
  @key(name: "byContract", fields: ["contractID"])
  @key(name: "byAssignee", fields: ["assigneeID"]) {
  id: ID!
  contractID: ID!
  contract: Contract @connection(fields: ["contractID"])
  dueDate: String!
  assigneeID: ID!
  assignee: User @connection(fields: ["assigneeID"])
  comments: [Comment] @connection(keyName: "byJob", fields: ["id"])
}

type Comment
  @model
  @versioned
  @key(name: "byJob", fields: ["jobID"])
  @key(name: "byContract", fields: ["contractID"])
  @key(name: "byAuthor", fields: ["authorID"]) {
  id: ID!
  jobID: ID!
  job: Job @connection(fields: ["jobID"])
  contractID: ID!
  contract: Contract @connection(fields: ["contractID"])
  authorID: ID!
  author: User @connection(fields: ["authorID"])
  content: String!
}
